- name: USERAPPS | JetBrains | PyCharm | Fail is Professional or Community version not defined
  fail:
    msg: 'Set the value of "pv_jb_pycharm_professional_community" to "pycharm_professional" or "pycharm_community"'
  when: ( pv_jb_pycharm_professional_community != "pycharm_professional" ) and (pv_jb_pycharm_professional_community != "pycharm_community")

- name: USERAPPS | JetBrains | PyCharm | Community
  when: pv_jb_pycharm_professional_community == "pycharm_community"
  import_tasks: pycharm_community.yml

- name: USERAPPS | JetBrains | PyCharm | Professional
  when: pv_jb_pycharm_professional_community == "pycharm_professional"
  import_tasks: pycharm_professional.yml

- name: USERAPPS | JetBrains | PyCharm | {{  pv_jb_pycharm_professional_community  }} | Set tar download path
  set_fact:
    pv_jb_pycharm_tmp_tar_download_path: "{{  pv_ua_user_tmp_dir  }}/{{  pv_jb_pycharm_professional_community  }}-{{ pv_jb_pycharm_version }}.tar.gz"

- name: USERAPPS | JetBrains | PyCharm | {{  pv_jb_pycharm_professional_community  }} | Check if file is there
  stat:
    path: "{{  pv_jb_pycharm_tmp_tar_download_path  }}"
  register: pv_jb_pycharm_tmp_tar_stat

- name: USERAPPS | JetBrains | PyCharm | {{  pv_jb_pycharm_professional_community  }} | Install
  when: not pv_jb_pycharm_tmp_tar_stat.stat.exists
  block:
    - name: USERAPPS | JetBrains | PyCharm | {{  pv_jb_pycharm_professional_community  }} | Install | Create Directory
      ansible.builtin.file:
        path: "{{  pv_jb_pycharm_install_path  }}"
        state: directory

    - name: USERAPPS | JetBrains | PyCharm | {{  pv_jb_pycharm_professional_community  }} | Install | Download Tar Ball
      ansible.builtin.get_url:
        url: "{{  pv_jb_pycharm_download_url  }}"
        dest: "{{  pv_jb_pycharm_tmp_tar_download_path  }}"

    - name: USERAPPS | JetBrains | PyCharm | {{  pv_jb_pycharm_professional_community  }} | Install | Unarchive the tarball
      ansible.builtin.unarchive:
        src: "{{  pv_jb_pycharm_tmp_tar_download_path  }}"
        dest: "{{  pv_jb_pycharm_install_path  }}"
        extra_opts: [--strip-components=1]
        remote_src: true

    - name: USERAPPS | JetBrains | PyCharm | {{  pv_jb_pycharm_professional_community  }} | Install | Create desktop icon
      ansible.builtin.template:
        src: templates/pycharm.j2
        dest: "{{  pv_jb_pycharm_desktop_icon_path  }}"
        mode: "0600"
